'use server';

import OpenAI from 'openai';

interface OpenAIGenerationResult {
    success: boolean;
    imageUrl?: string;
    prompt?: string;
    error?: string;
}

export async function generateImageWithOpenAI(prompt: string): Promise<OpenAIGenerationResult> {
    console.log('[OpenAI] Starting image generation with prompt:', prompt);
    
    try {
        // Check if API key is available
        const apiKey = process.env.OPENAI_API_KEY;
        if (!apiKey) {
            throw new Error('OPENAI_API_KEY is not configured');
        }

        // Initialize OpenAI
        const openai = new OpenAI({
            apiKey: apiKey,
        });

        // Enhanced prompt for better image generation
        const enhancedPrompt = `${prompt}, high resolution, detailed, professional quality, sharp focus, 4k, mobile wallpaper style, 9:16 aspect ratio, digital art`;

        console.log('[OpenAI] Sending request to OpenAI API...');
        
        // Generate image using OpenAI DALL-E
        const response = await openai.images.generate({
            model: "gpt-4o-mini",
            prompt: enhancedPrompt,
            n: 1,
            size: "1024x1792", // 9:16 aspect ratio for mobile wallpapers
            quality: "hd",
            style: "vivid",
        });

        if (!response.data || response.data.length === 0) {
            throw new Error('No image generated by OpenAI');
        }

        const imageUrl = response.data[0].url;
        if (!imageUrl) {
            throw new Error('No image URL in OpenAI response');
        }

        console.log('[OpenAI] Image generated successfully');
        
        return {
            success: true,
            imageUrl,
            prompt: enhancedPrompt
        };

    } catch (error) {
        const errorMessage = error instanceof Error ? error.message : 'Unknown error';
        console.error(`[OpenAI] ERROR in generateImageWithOpenAI: ${errorMessage}`);
        
        return {
            success: false,
            error: `OpenAI image generation failed: ${errorMessage}`
        };
    }
}

export async function generateRandomImageWithOpenAI(): Promise<OpenAIGenerationResult> {
    const randomPrompts = [
        "A stunning portrait of a beautiful woman with flowing hair, soft golden lighting, pastel colors, ultra-clear focus, aesthetic composition, elegant pose, cinematic photography",
        "An anime girl gazing at a starry night sky, neon-lit cyberpunk cityscape in background, soft shading, high contrast, 4k anime art style, clear focus, vibrant colors",
        "A heroic character standing on a rooftop at sunset, sprawling city behind them, dramatic lighting, cinematic wallpaper, inspired by modern superhero aesthetics",
        "A cozy aesthetic photo of coffee and an open book near a window, moody lighting, warm tones, high detail, clean composition, peaceful atmosphere",
        "A surreal dreamscape with floating islands connected by bridges, vivid colors, clean rendering, perfect symmetry, 4k fantasy art, magical atmosphere",
        "An elegant landscape with soft gradients and fluffy clouds, simple color palette, calming tones, minimalism, peaceful zen-like composition",
        "A nature scene with blooming flowers, colorful butterflies, and warm sunlight filtering through trees, high clarity, warm tones, smooth details",
        "Ultra-aesthetic abstract waves in pastel tones, 3D render style, smooth gradients, ultra HD, modern digital art, flowing motion"
    ];

    const randomPrompt = randomPrompts[Math.floor(Math.random() * randomPrompts.length)];
    return generateImageWithOpenAI(randomPrompt);
} 